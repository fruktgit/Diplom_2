{"name": "существующий пользователь может авторизоваться", "status": "failed", "statusDetails": {"message": "AssertionError: assert (401 == 200)\n +  where 401 = <Response [401]>.status_code", "trace": "self = <tests.test_login_user.TestLoginUser object at 0x04A2FB10>\nsetup_and_teardown = (<utils.api_client.APIClient object at 0x050430B0>, {'email': 'rjoseph@example.org', 'name': 'camxlgvtjv', 'password': 'dgdavzyzcy'})\n\n    @allure.title(\"существующий пользователь может авторизоваться\")\n    def test_login_user_success(self, setup_and_teardown):\n        client, user_data = setup_and_teardown  # Распаковываем значения\n    \n        client.post(API_ENDPOINTS[\"create_user\"], user_data)\n        response = client.post(API_ENDPOINTS[\"login_user\"], user_data)\n>       assert response.status_code == 200 and response.json().get('success') == True\nE       assert (401 == 200)\nE        +  where 401 = <Response [401]>.status_code\n\ntests\\test_login_user.py:14: AssertionError"}, "start": 1740397689367, "stop": 1740397690614, "uuid": "42d893df-1b78-481b-ae82-b361935f308d", "historyId": "4db8602b5d661c5e2d250c01b1766171", "testCaseId": "4db8602b5d661c5e2d250c01b1766171", "fullName": "tests.test_login_user.TestLoginUser#test_login_user_success", "labels": [{"name": "suite", "value": "Логин пользователя"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestLoginUser"}, {"name": "host", "value": "LAPTOP-JTVFLPC5"}, {"name": "thread", "value": "15644-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_user"}]}