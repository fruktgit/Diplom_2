{"name": "Создание заказа авторизованным пользователем", "status": "broken", "statusDetails": {"message": "KeyError: 'accessToken'", "trace": "self = <tests.test_create_order.TestCreateOrders object at 0x03F4C950>\nsetup_and_teardown = (<utils.api_client.APIClient object at 0x03F6D930>, {'email': 'johnsonkaitlyn@example.org', 'name': 'nowagmumuz', 'password': 'jjfumtvbur'})\n\n    @allure.title(\"Создание заказа авторизованным пользователем\")\n    def test_create_order_with_auth(self, setup_and_teardown):\n        client, user_data = setup_and_teardown  # Распаковываем значения\n        response = client.post(API_ENDPOINTS[\"create_user\"], user_data)\n>       token = response.json()[\"accessToken\"]\nE       KeyError: 'accessToken'\n\ntests\\test_create_order.py:15: KeyError"}, "start": 1740399593248, "stop": 1740399594170, "uuid": "4938da71-038c-41cb-86e0-bda96681a2a2", "historyId": "51219ca8f30a7ad6fd3be7e3227ae75c", "testCaseId": "51219ca8f30a7ad6fd3be7e3227ae75c", "fullName": "tests.test_create_order.TestCreateOrders#test_create_order_with_auth", "labels": [{"name": "suite", "value": "создание заказа"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestCreateOrders"}, {"name": "host", "value": "LAPTOP-JTVFLPC5"}, {"name": "thread", "value": "6028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}